# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-12-29 17:02
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(default='\u533f\u540d', max_length=50, verbose_name='\u6635\u79f0')),
                ('birthday', models.DateField(blank=True, default='1970-01-01', null=True, verbose_name='\u751f\u65e5')),
                ('gender', models.CharField(choices=[('1', '\u7537'), ('0', '\u5973')], default='0', max_length=6, verbose_name='\u6027\u522b')),
                ('address', models.CharField(default='', max_length=100, verbose_name='\u5730\u5740')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='\u624b\u673a\u53f7')),
                ('head_img', models.CharField(max_length=255, verbose_name='\u5934\u50cf')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user_info',
                'verbose_name': '\u7528\u6237\u4fe1\u606f',
                'verbose_name_plural': '\u7528\u6237\u4fe1\u606f',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('id', models.AutoField(max_length=10, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='\u6807\u9898')),
                ('content', models.TextField(verbose_name='\u5185\u5bb9')),
                ('rcount', models.IntegerField(default=0, verbose_name='\u9605\u8bfb\u91cf')),
                ('coms', models.IntegerField(default=0, verbose_name='\u8bc4\u8bba\u6570')),
                ('like', models.IntegerField(default=0, verbose_name='\u70b9\u8d5e\u6570')),
                ('ctime', models.DateTimeField(auto_now_add=True, max_length=30, verbose_name='\u521b\u5efa\u65f6\u95f4')),
                ('utime', models.DateTimeField(auto_now=True, max_length=30, verbose_name='\u4fee\u6539\u65f6\u95f4')),
            ],
            options={
                'db_table': 'user_blogs',
                'verbose_name': '\u535a\u5ba2',
                'verbose_name_plural': '\u535a\u5ba2',
            },
        ),
        migrations.CreateModel(
            name='Bmarks',
            fields=[
                ('id', models.AutoField(max_length=10, primary_key=True, serialize=False)),
                ('tags', models.CharField(max_length=128, unique=True, verbose_name='\u6807\u7b7e')),
            ],
            options={
                'db_table': 'blog_marks',
                'verbose_name': '\u5206\u7c7b',
                'verbose_name_plural': '\u5206\u7c7b',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(max_length=10, primary_key=True, serialize=False)),
                ('cbid', models.IntegerField(null=True, verbose_name='\u535a\u5ba2id')),
                ('cblog', models.CharField(max_length=128, null=True, verbose_name='\u535a\u5ba2\u6807\u9898')),
                ('comms', models.TextField(max_length=300, verbose_name='\u8bc4\u8bba\u5185\u5bb9')),
                ('uses', models.CharField(default='\u533f\u540d', max_length=128, verbose_name='\u8bc4\u8bba\u4eba')),
                ('ctime', models.DateTimeField(auto_now_add=True, max_length=30, null=True, verbose_name='\u521b\u5efa\u65f6\u95f4')),
            ],
            options={
                'db_table': 'use_comments',
                'verbose_name': '\u8bc4\u8bba',
                'verbose_name_plural': '\u8bc4\u8bba',
            },
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(max_length=10, primary_key=True, serialize=False)),
                ('like_user', models.CharField(default='\u533f\u540d', max_length=128, verbose_name='\u70b9\u8d5e\u4eba')),
                ('like_title', models.CharField(max_length=128, verbose_name='\u88ab\u8d5e\u6587\u7ae0')),
                ('like_id', models.IntegerField(null=True, verbose_name='\u88ab\u8d5e\u6587\u7ae0id')),
                ('like_time', models.DateTimeField(auto_now_add=True, max_length=30, verbose_name='\u70b9\u8d5e\u65f6\u95f4')),
            ],
            options={
                'db_table': 'blog_like',
                'verbose_name': '\u70b9\u8d5e',
                'verbose_name_plural': '\u70b9\u8d5e',
            },
        ),
        migrations.AlterUniqueTogether(
            name='bmarks',
            unique_together=set([('tags',)]),
        ),
        migrations.AddField(
            model_name='blogs',
            name='marks',
            field=models.ForeignKey(default='\u672a\u5206\u7c7b', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='blog_marks', to='blog.Bmarks', to_field='tags', verbose_name='\u5206\u7c7b'),
        ),
        migrations.AddField(
            model_name='blogs',
            name='uname',
            field=models.ForeignKey(default='\u533f\u540d', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL, to_field='username', verbose_name='\u7528\u6237\u540d'),
        ),
        migrations.AlterUniqueTogether(
            name='blogs',
            unique_together=set([('title',)]),
        ),
    ]
